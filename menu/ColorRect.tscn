[gd_scene load_steps=19 format=2]

[ext_resource path="res://menu/star shaderrr-01.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeTexture" id=1]
output_port_for_preview = 1
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeColorOp" id=2]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=4]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorFunc" id=5]
function = 4

[sub_resource type="VisualShaderNodeVectorOp" id=6]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorOp" id=7]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.05, 0.05, 0.05 ) ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=8]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeColorOp" id=9]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeColorConstant" id=10]
constant = Color( 0.197515, 0.143517, 0.408782, 1 )

[sub_resource type="VisualShaderNodeColorOp" id=11]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeInput" id=12]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=13]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=14]
function = 0

[sub_resource type="VisualShaderNodeVectorOp" id=15]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.8, 0.8, 0.3 ) ]
operator = 1

[sub_resource type="VisualShader" id=16]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_10;


void vertex() {
// Output:0

}

void fragment() {
// Input:2
	vec3 n_out2p0;
	n_out2p0 = vec3(UV,0.0);

// Color:4
	vec3 n_out4p0;
	float n_out4p1;
	n_out4p0 = vec3(0.197515,0.143517,0.408782);
	n_out4p1 = 1.000000;

// ColorOp:3
	vec3 n_out3p0;
	n_out3p0=abs(n_out2p0-n_out4p0);

// Input:6
	float n_out6p0;
	n_out6p0 = TIME;

// ScalarFunc:8
	float n_out8p0;
	n_out8p0 = sin(n_out6p0);

// ScalarOp:7
	float n_out7p0;
	n_out7p0 = dot(n_out4p0,vec3(0.333333,0.333333,0.333333)) * n_out8p0;

// ColorOp:5
	vec3 n_out5p0;
	n_out5p0=vec3(1.0)-(vec3(1.0)-n_out3p0)*(vec3(1.0)-vec3(n_out7p0));

// VectorOp:9
	vec3 n_in9p1 = vec3(0.80000,0.80000,0.30000);
	vec3 n_out9p0;
	n_out9p0 = n_out5p0 - n_in9p1;

// Input:13
	float n_out13p0;
	n_out13p0 = TIME;

// VectorFunc:16
	vec3 n_out16p0;
	{
		vec3 c = vec3(n_out13p0);
		vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
		vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
		vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));
		float d = q.x - min(q.w, q.y);
		float e = 1.0e-10;
		n_out16p0=vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
	}

// VectorOp:18
	vec3 n_in18p1 = vec3(0.05000,0.05000,0.05000);
	vec3 n_out18p0;
	n_out18p0 = n_out16p0 * n_in18p1;

// ScalarOp:14
	float n_out14p0;
	n_out14p0 = dot(n_out18p0,vec3(0.333333,0.333333,0.333333)) + dot(n_out2p0,vec3(0.333333,0.333333,0.333333));

// VectorOp:17
	vec3 n_out17p0;
	n_out17p0 = vec3(n_out14p0) + n_out2p0;

// Texture:10
	vec3 n_out10p0;
	float n_out10p1;
	vec4 tex_frg_10_read = texture( tex_frg_10 , n_out17p0.xy );
	n_out10p0 = tex_frg_10_read.rgb;
	n_out10p1 = tex_frg_10_read.a;

// ColorOp:11
	vec3 n_out11p0;
	n_out11p0=vec3(1.0)-(vec3(1.0)-n_out9p0)*(vec3(1.0)-vec3(n_out10p1));

// Output:0
	COLOR.rgb = n_out11p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -338.355, -325.898 )
mode = 1
flags/light_only = false
nodes/vertex/0/position = Vector2( 560, -60 )
nodes/fragment/0/position = Vector2( 1140, 20 )
nodes/fragment/2/node = SubResource( 8 )
nodes/fragment/2/position = Vector2( 120, 40 )
nodes/fragment/3/node = SubResource( 9 )
nodes/fragment/3/position = Vector2( 360, 40 )
nodes/fragment/4/node = SubResource( 10 )
nodes/fragment/4/position = Vector2( 180, 240 )
nodes/fragment/5/node = SubResource( 11 )
nodes/fragment/5/position = Vector2( 600, 40 )
nodes/fragment/6/node = SubResource( 12 )
nodes/fragment/6/position = Vector2( -20, 320 )
nodes/fragment/7/node = SubResource( 13 )
nodes/fragment/7/position = Vector2( 360, 260 )
nodes/fragment/8/node = SubResource( 14 )
nodes/fragment/8/position = Vector2( 160, 320 )
nodes/fragment/9/node = SubResource( 15 )
nodes/fragment/9/position = Vector2( 780, 40 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 660, -340 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 960, -260 )
nodes/fragment/13/node = SubResource( 3 )
nodes/fragment/13/position = Vector2( -100, -300 )
nodes/fragment/14/node = SubResource( 4 )
nodes/fragment/14/position = Vector2( 200, -300 )
nodes/fragment/16/node = SubResource( 5 )
nodes/fragment/16/position = Vector2( -80, -220 )
nodes/fragment/17/node = SubResource( 6 )
nodes/fragment/17/position = Vector2( 380, -220 )
nodes/fragment/18/node = SubResource( 7 )
nodes/fragment/18/position = Vector2( 0, -140 )
nodes/fragment/connections = PoolIntArray( 2, 0, 3, 0, 4, 0, 3, 1, 3, 0, 5, 0, 4, 0, 7, 0, 7, 0, 5, 1, 6, 0, 8, 0, 8, 0, 7, 1, 5, 0, 9, 0, 9, 0, 11, 0, 2, 0, 14, 1, 13, 0, 16, 0, 14, 0, 17, 0, 17, 0, 10, 0, 11, 0, 0, 0, 16, 0, 18, 0, 2, 0, 17, 1, 10, 1, 11, 1, 18, 0, 14, 0 )

[sub_resource type="ShaderMaterial" id=17]
shader = SubResource( 16 )

[node name="ColorRect" type="ColorRect"]
material = SubResource( 17 )
anchor_right = 1.0
anchor_bottom = 1.0

